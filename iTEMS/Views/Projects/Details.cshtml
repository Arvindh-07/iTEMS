@using System.IO
@model iTEMS.Models.Project

@{
    ViewData["Title"] = "Details";
}

<style>
    .small-icon {
        width: 50px; /* Adjust the width as needed */
        height: 70px; /* Adjust the height as needed */
        font-size: 20px; /* Adjust the icon size as needed */
        line-height: 30px; /* Ensure the icon is vertically centered */
    }

    .comment-actions {
        top: 0;
        right: 0;
    }

    .comment-actions button {
        margin-left: 5px;
    }

    .transparent-button {
        background: transparent;
        border: none;
        padding: 0;
    }

    .transparent-button:hover {
       background: rgba(0, 0, 0, 0); /* Optional: Add a slight hover effect */
    }
        

    .transparent-button .fa {
            color: #adb5bd; /* Keep the icon color as is */
    }

    .hidden-comment {
        display: none;
    }

    .remove-button {
        margin-left: 10px;
        background: none;
        border: none;
        color: red;
        font-size: 1.2em;
        cursor: pointer;
    }

    .remove-button:hover {
        color: darkred;
    }
</style>


@{
    int commentBatchSize = ViewData["CommentBatchSize"] as int? ?? 5;
}

<br />
<br />
<br />
<div class="container">
    <div class="card-body" style="display: block;">
        <h3 style="font-family:Tahoma"><strong>Project Details</strong></h3>
        <br />
        <div class="row">
            <div class="col-12 col-lg-8 order-2 order-lg-1">
                <div class="row">
                    <div class="col-12 col-sm-4">
                        <div class="info-box">
                            <span class="info-box-icon bg-info elevation-1 small-icon"><i class="fa-solid fa-dollar-sign"></i></span>
                            <div class="info-box-content">
                                <span class="info-box-text">Estimated Budget</span>
                                <span class="info-box-number">@Model.Budget</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-sm-4">
                        <div class="info-box">
                            <span class="info-box-icon bg-warning elevation-1 small-icon"><i class="fa-solid fa-money-bill-1-wave"></i></span>
                            <div class="info-box-content">
                                <span class="info-box-text">Total Spent</span>
                                <span class="info-box-number">@Model.TotalSpent</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-sm-4">
                        <div class="info-box">
                            <span class="info-box-icon bg-success elevation-1 small-icon"><i class="fa-solid fa-clock"></i></span>
                            <div class="info-box-content">
                                <span class="info-box-text">Estimated Duration</span>
                                <span class="info-box-number">@Model.EstimatedDuration</span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card border-only mt-3">
                    <div class="card-body">
                        <h5 class="card-title">Start a Thread</h5>
                        <form asp-action="PostUpdate" asp-route-id="@Model.Id" method="post" enctype="multipart/form-data" id="updateForm">
                            <div class="form-group">
                                <label for="Update"></label>
                                <input type="text" id="Update" name="Update" class="form-control" />
                            </div>
                            <div class="form-group">
                                <label for="updateFileInput">Attach files:</label>
                                <input type="file" id="updateFileInput" name="files" class="form-control" multiple style="display:none;" />
                                <button type="button" id="customUpdateFileButton" class="btn btn-secondary">Choose Files</button>
                            </div>
                            <ul id="updateFileList"></ul>
                            <button type="submit" class="btn btn-primary">Post Update</button>
                        </form>
                    </div>
                </div>


                @{
                    int timelinePageSize = 5;
                    int attachmentPageSize = 5;
                    int totalTimelineItems = Model.Timelines.Count;
                    int totalAttachmentItems = Model.Attachments != null ? Model.Attachments.Count : 0;
                    int totalTimelinePages = (int)Math.Ceiling((double)totalTimelineItems / timelinePageSize);
                    int totalAttachmentPages = (int)Math.Ceiling((double)totalAttachmentItems / attachmentPageSize);
                    int timelinePage = string.IsNullOrEmpty(Context.Request.Query["timelinePage"]) ? 1 : Convert.ToInt32(Context.Request.Query["timelinePage"]);
                    int attachmentPage = string.IsNullOrEmpty(Context.Request.Query["attachmentPage"]) ? 1 : Convert.ToInt32(Context.Request.Query["attachmentPage"]);
                    int timelineStartIndex = (timelinePage - 1) * timelinePageSize;
                    int timelineEndIndex = Math.Min(timelineStartIndex + timelinePageSize - 1, totalTimelineItems - 1);
                    int attachmentStartIndex = (attachmentPage - 1) * attachmentPageSize;
                    int attachmentEndIndex = Math.Min(attachmentStartIndex + attachmentPageSize - 1, totalAttachmentItems - 1);
                    var paginatedTimelines = Model.Timelines.OrderByDescending(t => t.Timestamp).Skip(timelineStartIndex).Take(timelinePageSize).ToList();
                }

                <div class="row">
                    <div class="col-12">
                        <h3 style="font-family:Tahoma"><strong>Project Timeline</strong></h3>
                        @foreach (var entry in Model.Timelines.OrderByDescending(t => t.Timestamp).Skip(timelineStartIndex).Take(timelinePageSize))
                        {
                            <div class="card mb-3">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div class="user-block">
                                            <img class="img-circle img-bordered-sm" src="~/assets/profile_pic.png" alt="user image">
                                            <span class="username">
                                                <h4>@entry.UserInvolved</h4>
                                            </span>
                                            <span class="description">@entry.Timestamp.ToString("dd-MMMM-yyyy HH:mm:ss")</span>
                                        </div>
                                        @if (User.IsInRole("Super Admin"))
                                        {
                                            <form asp-action="DeleteTimelineEntryConfirmed" asp-controller="Projects" asp-route-id="@entry.Id" method="post" class="ml-auto" title="Delete Entry">
                                                <button type="submit" class="close" aria-label="Close" onclick="return confirm('Are you sure you want to delete this timeline entry?');">
                                                    <span aria-hidden="true">&times;</span>
                                                </button>
                                            </form>
                                        }
                                    </div>
                                    <p class="card-text">
                                        @switch (entry.Type)
                                        {
                                            case "File Uploaded":
                                                <text>@entry.UserInvolved has uploaded a file: <a href="@Url.Action("DownloadFile", "Projects", new { id = Model.Id, fileName = entry.FileName })">@entry.FileName</a></text>
                                                break;
                                            case "Update Posted":
                                                <text>@entry.Description</text>
                                                @if (entry.TimelineFiles.Any())
                                                {
                                                    <br />
                                                    <ol>
                                                        @foreach (var file in entry.TimelineFiles)
                                                        {
                                                            <li>
                                                                <a href="@Url.Content("~/" + file.FilePath)" download>@file.FileName</a>
                                                            </li>
                                                        }
                                                    </ol>
                                                }
                                                break;
                                            case "Status Change":
                                                <text>@entry.Description</text>
                                                break;
                                            default:
                                                <text>@entry.Description</text>
                                                break;
                                        }
                                    </p>
                                    <hr />
                                    <div class="mt-3">
                                        <ul class="list-unstyled" id="comments-list-@entry.Id">
                                            @foreach (var comment in entry.Comments.OrderByDescending(c => c.Timestamp).Select((c, index) => new { Comment = c, Index = index }))
                                            {
                                                <li id="comment-@comment.Comment.Id" class="position-relative @(comment.Index >= 5 ? "hidden-comment" : "")">
                                                    <strong id="user-@comment.Comment.Id">@comment.Comment.User</strong>
                                                    <small id="timestamp-@comment.Comment.Id">@comment.Comment.Timestamp.ToString("dd-MMMM-yyyy HH:mm:ss")</small>
                                                    @if (comment.Comment.IsEdited)
                                                    {
                                                        <small class="text-muted">(edited @comment.Comment.EditedTimestamp?.ToString("dd-MMMM-yyyy HH:mm:ss"))</small>
                                                    }
                                                    <br />
                                                    <span id="content-@comment.Comment.Id">@comment.Comment.Content</span>
                                                    @if (comment.Comment.CommentFiles.Any())
                                                    {
                                                        <br />
                                                        <ol>
                                                            @foreach (var file in comment.Comment.CommentFiles)
                                                            {
                                                                <li>
                                                                    <a href="@Url.Content("~/" + file.FilePath)" download>@file.FileName</a>
                                                                    <br />
                                                                </li>
                                                            }
                                                        </ol>
                                                    }

                                                    <div class="comment-actions position-absolute" style="top: 0; right: 0;">
                                                        @if (!string.IsNullOrEmpty(comment.Comment.Content))
                                                        {
                                                            <button class="btn btn-sm transparent-button" onclick="editComment(@comment.Comment.Id, `@(Html.Raw(@comment.Comment.Content?.Replace("`", "\\`") ?? string.Empty))`)" title="Edit comment">
                                                                <i class="fa fa-pencil-alt"></i>
                                                            </button>
                                                        }

                                                        <form action="/Projects/DeleteComment" method="post" class="d-inline">
                                                            <input type="hidden" name="id" value="@comment.Comment.Id">
                                                            <button type="submit" class="btn btn-sm transparent-button" title="Delete comment" onclick="return confirm('Are you sure you want to delete this comment?');">
                                                                <i class="fa fa-times"></i>
                                                            </button>
                                                        </form>
                                                    </div>
                                                    <hr />
                                                </li>
                                            }
                                        </ul>
                                        @if (entry.Comments.Count > 5)
                                        {
                                            <button class="btn btn-secondary" onclick="loadMoreComments(@entry.Id, 5)">Show more</button>
                                        }
                                        <form asp-action="PostComment" asp-route-id="@entry.Id" method="post" enctype="multipart/form-data" id="commentForm-@entry.Id">
                                            <div class="form-group">
                                                <label for="Comment">Comment</label>
                                                <textarea id="Comment" name="Comment" class="form-control"></textarea>
                                            </div>
                                            <div class="form-group">
                                                <label for="commentFileInput-@entry.Id">Attach files:</label>
                                                <input type="file" id="commentFileInput-@entry.Id" name="commentFiles" class="form-control" multiple style="display:none;" />
                                                <button type="button" class="customCommentFileButton btn btn-secondary" data-file-input="commentFileInput-@entry.Id" data-file-list="commentFileList-@entry.Id">Choose Files</button>
                                            </div>
                                            <ul id="commentFileList-@entry.Id"></ul>
                                            <button type="submit" class="btn btn-primary">Post Comment</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        }

                    </div>
                </div>

                @if (totalTimelinePages > 1)
                {
                    <div class="row">
                        <div class="col-12">
                            <ul class="pagination">
                                @for (int i = 1; i <= totalTimelinePages; i++)
                                {
                                    <li class="page-item @(i == timelinePage ? "active" : "")">
                                        <a class="page-link" href="?timelinePage=@i&attachmentPage=@attachmentPage">@i</a>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                }
            </div>
            <div class="col-12 col-lg-4 order-1 order-lg-2">
                <div class="card" style="width: 100%; margin-bottom: 20px;">
                    <div class="card-body">
                        <h5 class="card-title text-muted">Project Name</h5>
                        <h3 class="card-text" style="font-family: Tahoma;"><strong>@Model.Name</strong></h3>
                        <hr>
                        <h5 class="card-title text-muted">Description</h5>
                        <p class="card-text"><strong>@Model.Description</strong></p>
                        <hr>
                        <h5 class="card-title text-muted">Client Name</h5>
                        <p class="card-text"><strong>@Model.ClientName</strong></p>
                        <hr>
                        <h5 class="card-title text-muted">Project Leader</h5>
                        <p class="card-text"><strong>@Model.PIC</strong></p>
                    </div>
                </div>

                <div class="card mt-3">
                    <div class="card-header">
                        <h5 class="text-muted" style="font-family:Tahoma">Project files</h5>
                    </div>
                    <div class="card-body">
                        <ul class="list-unstyled">
                            @if (totalAttachmentItems > 0)
                            {
                                for (int i = attachmentStartIndex; i <= attachmentEndIndex; i++)
                                {
                                    <li>
                                        <a href="@Url.Action("DownloadFile", "Projects", new { id = Model.Id })" download="@System.IO.Path.GetFileName(Model.Attachments[i])">@System.IO.Path.GetFileName(Model.Attachments[i])</a>
                                    </li>
                                }
                            }
                            else
                            {
                                <li>
                                    <span>No files uploaded</span>
                                </li>
                            }
                        </ul>
                        @if (totalAttachmentPages > 1)
                        {
                            <div class="row">
                                <div class="col-12">
                                    <ul class="pagination">
                                        @for (int i = 1; i <= totalAttachmentPages; i++)
                                        {
                                            <li class="page-item @(i == attachmentPage ? "active" : "")">
                                                <a class="page-link" href="?attachmentPage=@i">@i</a>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        }
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>


<div class="form-group">
    <a class="btn btn-outline-info" asp-action="Index" title="Back to Projects List" onmouseover="this.style.backgroundColor='#007bff';" onmouseout="this.style.backgroundColor='';"><i class="fa-solid fa-arrow-left-long"></i></a>
</div>

<script>


    function editComment(commentId, commentContent) {
        const commentElement = document.getElementById(`comment-${commentId}`);
        commentElement.innerHTML = `
            <form action="/Projects/EditComment" method="post">
                <input type="hidden" name="commentId" value="${commentId}">
                <div class="form-group">
                    <label for="edit-comment">Edit comment:</label>
                    <textarea id="edit-comment" name="comment" class="form-control">${commentContent}</textarea>
                </div>
                <button type="submit" class="btn btn-primary">Save</button>
                <button type="button" class="btn btn-secondary" onclick="cancelEdit(${commentId}, \`${commentContent}\`, \`user-${commentId}\`, \`timestamp-${commentId}\`)">Cancel</button>
            </form>
        `;
    }

    function loadMoreComments(entryId, count) {
        const commentsList = document.getElementById(`comments-list-${entryId}`);
        const hiddenComments = commentsList.querySelectorAll('.hidden-comment');
        for (let i = 0; i < count && i < hiddenComments.length; i++) {
            hiddenComments[i].classList.remove('hidden-comment');
        }
        if (commentsList.querySelectorAll('.hidden-comment').length === 0) {
            const showMoreButton = commentsList.nextElementSibling; // Assuming the button is right after the list
            if (showMoreButton && showMoreButton.tagName === 'BUTTON') {
                showMoreButton.style.display = 'none';
            }
        }
    }

    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll('.customCommentFileButton').forEach(button => {
            const fileInputId = button.getAttribute('data-file-input');
            const fileListId = button.getAttribute('data-file-list');
            initializeFileHandling(fileInputId, fileListId, button);
        });

        function initializeFileHandling(fileInputId, fileListId, customFileButton) {
            const fileInput = document.getElementById(fileInputId);
            const fileList = document.getElementById(fileListId);
            let files = [];

            customFileButton.addEventListener('click', function () {
                fileInput.click();
            });

            fileInput.addEventListener('change', handleFileSelect);

            function handleFileSelect(event) {
                const selectedFiles = Array.from(event.target.files);
                files = files.concat(selectedFiles);
                updateFileList();
            }

            function updateFileList() {
                fileList.innerHTML = '';
                files.forEach((file, index) => {
                    const listItem = document.createElement('li');
                    listItem.textContent = file.name;
                    const removeButton = document.createElement('button');
                    removeButton.innerHTML = '&times;';
                    removeButton.type = 'button';
                    removeButton.classList.add('remove-button');
                    removeButton.addEventListener('click', () => {
                        files.splice(index, 1);
                        updateFileInput();
                        updateFileList();
                    });
                    listItem.appendChild(removeButton);
                    fileList.appendChild(listItem);
                });
            }

            function updateFileInput() {
                const dataTransfer = new DataTransfer();
                files.forEach(file => dataTransfer.items.add(file));
                fileInput.files = dataTransfer.files;
            }

            customFileButton.closest('form').addEventListener('submit', function (event) {
                updateFileInput();
            });
        }
    });

    // function cancelEdit(commentId, commentContent, commentUserId, commentTimestampId) {
    //     const commentElement = document.getElementById(`comment-${commentId}`);
    //     const commentUser = document.getElementById(commentUserId).innerText;
    //     const commentTimestamp = document.getElementById(commentTimestampId).innerText;
    //     commentElement.innerHTML = `
    //         <strong id="user-${commentId}">${commentUser}</strong> <small id="timestamp-${commentId}">${commentTimestamp}</small><br />
    //         <span id="content-${commentId}">${commentContent}</span>
    //         <div class="comment-actions position-absolute" style="top: 0; right: 0;">
    //             <button class="btn btn-sm btn-secondary" onclick="editComment(${commentId}, \`${commentContent}\`)" title="Edit comment">
    //                 <i class="fa fa-pencil-alt"></i>
    //             </button>
    //             <form action="/Projects/DeleteComment" method="post" class="d-inline">
    //                 <input type="hidden" name="commentId" value="${commentId}">
    //                 <button type="submit" class="btn btn-sm btn-danger" title="Delete comment" onclick="return confirm('Are you sure you want to delete this comment?');">
    //                     <i class="fa fa-times"></i>
    //                 </button>
    //             </form>
    //         </div>
    //         <hr />
    //     `;
    // }

    function cancelEdit(commentId) {
        location.reload(); // Reload the page to revert to the original state
    }
</script>



